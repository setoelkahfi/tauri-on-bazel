"Bazel module dependencies, see https://bazel.build/external/overview#bzlmod"

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "aspect_rules_js", version = "1.42.3")
bazel_dep(name = "aspect_rules_ts", version = "2.4.1")
bazel_dep(name = "rules_nodejs", version = "6.1.1")
bazel_dep(name = "rules_rust", version = "0.46.0")

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version_from_nvmrc = "//:.nvmrc")
#################################

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm", dev_dependency = True)
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    public_hoist_packages = {
        "@next/eslint-plugin-next": ["next.js"],
        "eslint-config-react-app": ["react"],
        "eslint@8.28.0": ["react"],
    },
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

crate = use_extension(
    "@rules_rust//crate_universe:extension.bzl",
    "crate",
)

crate.spec(
    package = "tauri-cli",
    version = "1.5.14",
)

crate.annotation(crate = "tauri-cli", gen_binaries = ["cargo-tauri"])

crate.from_specs()

use_repo(crate, "crates")
